{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 37d7e043501452087d27","webpack:///./src/MobxPromise.ts","webpack:///external \"mobx\"","webpack:///./src/utils.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mobx\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mobx\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory(require(\"mobx\"));\n\telse\n\t\troot[\"index\"] = factory(root[\"mobx\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 37d7e043501452087d27","import {observable, action, computed, Atom} from \"mobx\";\nimport {makePseudoObservable} from \"./utils\";\n\n/**\n * This tagged union type describes the interoperability of MobxPromise properties.\n */\ntype MobxPromiseStatus = 'pending' | 'error' | 'complete';\nexport type MobxPromiseUnionType<R> = (\n\t{ status: 'pending',  isPending: true,  isError: false, isComplete: false, result: R|undefined, error: Error|undefined } |\n\t{ status: 'error',    isPending: false, isError: true,  isComplete: false, result: R|undefined, error: Error           } |\n\t{ status: 'complete', isPending: false, isError: false, isComplete: true,  result: R,           error: Error|undefined }\n) & { peekStatus: MobxPromiseStatus };\nexport type MobxPromiseUnionTypeWithDefault<R> = (\n\t{ status: 'pending',  isPending: true,  isError: false, isComplete: false, result: R, error: Error|undefined } |\n\t{ status: 'error',    isPending: false, isError: true,  isComplete: false, result: R, error: Error           } |\n\t{ status: 'complete', isPending: false, isError: false, isComplete: true,  result: R, error: Error|undefined }\n) & { peekStatus: MobxPromiseStatus };\n\nexport type MobxPromiseInputUnion<R> = PromiseLike<R> | (() => PromiseLike<R>) | MobxPromiseInputParams<R>;\nexport type MobxPromiseInputParams<R> = {\n\t/**\n\t * A function that returns a list of MobxPromise objects which are dependencies of the invoke function.\n\t */\n\tawait?: MobxPromise_await,\n\n\t/**\n\t * A function that returns the async result or a promise for the async result.\n\t */\n\tinvoke: MobxPromise_invoke<R>,\n\n\t/**\n\t * Default result in place of undefined\n\t */\n\tdefault?: R,\n\n\t/**\n\t * A function that will be called when the latest promise from invoke() is resolved.\n\t * It will not be called for out-of-date promises.\n\t */\n\tonResult?: (result?:R) => void,\n\n\t/**\n\t * A function that will be called when the latest promise from invoke() is rejected.\n\t * It will not be called for out-of-date promises.\n\t */\n\tonError?: (error:Error) => void,\n};\nexport type MobxPromise_await = () => Array<MobxPromiseUnionTypeWithDefault<any> | MobxPromiseUnionType<any> | MobxPromise<any>>;\nexport type MobxPromise_invoke<R> = (syncResolve:(result:R)=>void) => PromiseLike<R>;\nexport type MobxPromiseInputParamsWithDefault<R> = {\n\tawait?: MobxPromise_await,\n\tinvoke: MobxPromise_invoke<R>,\n\tdefault: R,\n\tonResult?: (result:R) => void,\n\tonError?: (error:Error) => void,\n};\n\n/**\n * MobxPromise provides an observable interface for a computed promise.\n * @author adufilie http://github.com/adufilie\n */\nexport class MobxPromiseImpl<R>\n{\n\tstatic isPromiseLike(value:any)\n\t{\n\t\treturn value != null && typeof value === 'object' && typeof value.then === 'function';\n\t}\n\n\tstatic normalizeInput<R>(input:MobxPromiseInputParamsWithDefault<R>):MobxPromiseInputParamsWithDefault<R>;\n\tstatic normalizeInput<R>(input:MobxPromiseInputUnion<R>, defaultResult?:R):MobxPromiseInputParamsWithDefault<R>;\n\tstatic normalizeInput<R>(input:MobxPromiseInputUnion<R>):MobxPromiseInputParams<R>;\n\tstatic normalizeInput<R>(input:MobxPromiseInputUnion<R>, defaultResult?:R)\n\t{\n\t\tif (typeof input === 'function')\n\t\t\treturn {invoke: input, default: defaultResult};\n\n\t\tif (MobxPromiseImpl.isPromiseLike(input))\n\t\t\treturn {invoke: () => input as PromiseLike<R>, default: defaultResult};\n\n\t\tinput = input as MobxPromiseInputParams<R>;\n\t\tif (defaultResult !== undefined)\n\t\t\tinput = {...input, default: defaultResult};\n\t\treturn input;\n\t}\n\n\tconstructor(input:MobxPromiseInputUnion<R>, defaultResult?:R)\n\t{\n\t\tlet norm = MobxPromiseImpl.normalizeInput(input, defaultResult);\n\t\tthis.await = norm.await;\n\t\tthis.invoke = norm.invoke;\n\t\tthis.defaultResult = norm.default;\n\t\tthis.onResult = norm.onResult;\n\t\tthis.onError = norm.onError;\n\t}\n\n\tprivate await?:MobxPromise_await;\n\tprivate invoke:MobxPromise_invoke<R>;\n\tprivate onResult?:(result?:R) => void;\n\tprivate onError?:(error:Error) => void;\n\tprivate defaultResult?:R;\n\tprivate _asyncInvokeCount:number = 0;\n\n\tprivate internalStatus = makePseudoObservable('pending' as 'pending'|'complete'|'error');\n\tprivate internalResult = makePseudoObservable(undefined as R|undefined);\n\tprivate internalError = makePseudoObservable(undefined as Error|undefined);\n\n\t@computed get status():'pending'|'complete'|'error'\n\t{\n\t\t// wait until all MobxPromise dependencies are complete\n\t\tif (this.await)\n\t\t\tfor (let status of this.await().map(mp => mp.status)) // track all statuses before returning\n\t\t\t\tif (status !== 'complete')\n\t\t\t\t\treturn status;\n\n\n\t\tthis.invokeResult; // reference to start computation when status is referenced\n\t\treturn this.internalStatus.value;\n\t}\n\n\t@computed get peekStatus():'pending'|'complete'|'error'\n\t{\n\t\t// check status without triggering invoke\n\n\t\t// check status of all MobxPromise dependencies\n\t\tif (this.await)\n\t\t\tfor (let status of this.await().map(mp => mp.peekStatus))\n\t\t\t\tif (status !== 'complete')\n\t\t\t\t\treturn status;\n\n\t\t// otherwise, return internal status\n\t\treturn this.internalStatus.value;\n\t}\n\n\t@computed get isPending() { return this.status == 'pending'; }\n\t@computed get isComplete() { return this.status == 'complete'; }\n\t@computed get isError() { return this.status == 'error'; }\n\n\t@computed get result():R|undefined\n\t{\n\t\t// checking status may trigger invoke\n\t\tif (this.isError || !this.internalResult.isSet)\n\t\t\treturn this.defaultResult;\n\n\t\treturn this.internalResult.value;\n\t}\n\n\t@computed get error():Error|undefined\n\t{\n\t\t// checking status may trigger invoke\n\t\tif (!this.isComplete && this.await)\n\t\t\tfor (let error of this.await().map(mp => mp.error)) // track all errors before returning\n\t\t\t\tif (error)\n\t\t\t\t\treturn error;\n\n\t\treturn this.internalError.value;\n\t}\n\n\t/**\n\t * This lets mobx determine when to call this.invoke(),\n\t * taking advantage of caching based on observable property access tracking.\n\t */\n\t@computed private get invokeResult()\n\t{\n\t\tlet syncResult = {\n\t\t\tisSet: false,\n\t\t\tvalue: (undefined as R|undefined)\n\t\t};\n\n\t\tlet promise = this.invoke((result:R)=>{\n\t\t\tsyncResult.isSet = true;\n\t\t\tsyncResult.value = result;\n\t\t});\n\n\t\t// override promise value, and set synchronously, if theres a synchronous resolution\n\t\tif (syncResult.isSet) {\n\t\t\tthis.setComplete(this._asyncInvokeCount, syncResult.value!);\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tthis._asyncInvokeCount += 1;\n\t\t\tthis.setPending(this._asyncInvokeCount, promise);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t@action private setPending(invokeId:number, promise:PromiseLike<R>)\n\t{\n\t\tpromise.then(\n\t\t\tresult => this.setComplete(invokeId, result),\n\t\t\terror => this.setError(invokeId, error)\n\t\t);\n\t\tthis.internalStatus.value = 'pending';\n\t}\n\n\t@action private setComplete(invokeId:number, result:R)\n\t{\n\t\tif (invokeId === this._asyncInvokeCount)\n\t\t{\n\t\t\tthis.internalResult.value = result;\n\t\t\tthis.internalError.value = undefined;\n\t\t\tthis.internalStatus.value = 'complete';\n\n\t\t\tif (this.onResult)\n\t\t\t\tthis.onResult(this.result); // may use defaultResult\n\t\t}\n\t}\n\n\t@action private setError(invokeId:number, error:Error)\n\t{\n\t\tif (invokeId === this._asyncInvokeCount)\n\t\t{\n\t\t\tthis.internalError.value = error;\n\t\t\tthis.internalResult.value = undefined;\n\t\t\tthis.internalStatus.value = 'error';\n\n\t\t\tif (this.onError)\n\t\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport type MobxPromiseFactory = {\n\t// This provides more information for TypeScript code flow analysis\n\t<R>(input:MobxPromiseInputParamsWithDefault<R>):MobxPromiseUnionTypeWithDefault<R>;\n\t<R>(input:MobxPromiseInputUnion<R>, defaultResult: R):MobxPromiseUnionTypeWithDefault<R>;\n\t<R>(input:MobxPromiseInputUnion<R>):MobxPromiseUnionType<R>;\n};\n\nexport const MobxPromise = MobxPromiseImpl as {\n\t// This provides more information for TypeScript code flow analysis\n\tnew <R>(input:MobxPromiseInputParamsWithDefault<R>): MobxPromiseUnionTypeWithDefault<R>;\n\tnew <R>(input:MobxPromiseInputUnion<R>, defaultResult: R): MobxPromiseUnionTypeWithDefault<R>;\n\tnew <R>(input:MobxPromiseInputUnion<R>): MobxPromiseUnionType<R>;\n};\n\nexport interface MobxPromise<T> extends Pick<MobxPromiseImpl<T>, 'status' | 'error' | 'result' | 'isPending' | 'isError' | 'isComplete' | 'peekStatus'>\n{\n}\n\nexport default MobxPromise;\n\n\n\n// WEBPACK FOOTER //\n// ./src/MobxPromise.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mobx\"\n// module id = 1\n// module chunks = 0","import {Atom, computed, extras, IComputedValue, IListenable, IObservable} from 'mobx';\nimport {MobxPromise} from \"./MobxPromise\";\n\n/**\n * A decorator for creating a <code>@computed</code> property that will be cached\n * after the first time it is accessed, even if it becomes unobserved later.\n * @param target\n * @param propertyKey\n * @param descriptor\n */\nexport function cached<T>(target: any, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>)\n{\n\tif (descriptor.get)\n\t{\n\t\tlet get = descriptor.get;\n\t\tdescriptor.get = function(...args:any[]) {\n\t\t\tconst computed = extras.getAtom(this, propertyKey as string) as IObservable & IListenable;\n\t\t\t// to keep the cached value, add an observer if there are none\n\t\t\tif (computed.observers && computed.observers.length === 0)\n\t\t\t\tcomputed.observe(function() { /*noop*/ });\n\t\t\treturn get.apply(this, args);\n\t\t};\n\t}\n\treturn computed(target, propertyKey, descriptor);\n}\n\n/**\n * Checks if a property has observers.\n */\nexport function hasObservers<T>(thing:T, property:keyof T)\n{\n\tlet tree = extras.getObserverTree(thing, property as string);\n\treturn tree && tree.observers ? tree.observers.length > 0 : false;\n}\n\n/**\n * Update MobxPromise debug names to reflect their property names on a given object.\n * @param target An object which has properties that are MobxPromises.\n */\nexport function labelMobxPromises<T extends object>(target:T)\n{\n\tfor (let key in target)\n\t{\n\t\tlet desc = Object.getOwnPropertyDescriptor(target, key);\n\t\tif (desc && desc.value instanceof MobxPromise)\n\t\t{\n\t\t\tlet admin = extras.getAdministration(desc.value);\n\t\t\tadmin.name = `${key}(${admin.name})`;\n\t\t}\n\t}\n}\n\n/**\n * A function created with debounceAsync() returns a new Promise\n * every time, but only the last promise created before invoking the\n * original function will be resolved after a specified delay.\n */\nexport function debounceAsync<R, F extends (...args:any[]) => PromiseLike<R>>(invoke:F, delay = 0):F\n{\n\tfunction invokeLater(\n\t\tcontext:any,\n\t\targs:any[],\n\t\tresolve:(result:PromiseLike<R>)=>void,\n\t\treject:(error:Error)=>void\n\t) {\n\t\ttry\n\t\t{\n\t\t\tresolve(invoke.apply(context, args));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treject(e);\n\t\t}\n\t}\n\n\tlet timeout = 0;\n\treturn function(...args:any[]):PromiseLike<R> {\n\t\treturn new Promise<R>(\n\t\t\tfunction(resolve, reject) {\n\t\t\t\twindow.clearTimeout(timeout);\n\t\t\t\ttimeout = window.setTimeout(invokeLater, delay, this, args, resolve, reject);\n\t\t\t}\n\t\t);\n\t} as F;\n}\n\n\nexport function makePseudoObservable<T>(initialValue:T) {\n    const _atom = new Atom();\n    let _isSet = false;\n    let _value = initialValue;\n\n    return {\n        get isSet() {\n            _atom.reportObserved();\n            return _isSet;\n        },\n        get value() {\n            _atom.reportObserved();\n            return _value;\n        },\n        set value(v:T) {\n            _value = v;\n            _isSet = true;\n            _atom.reportChanged();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","export * from './MobxPromise';\nexport * from './utils';\n\nimport MobxPromise from './MobxPromise';\nexport default MobxPromise;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}